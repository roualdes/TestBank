worker_processes 1;

events {
    worker_connections 1024;
}

http {

     include /etc/nginx/mime.types;

     ignore_invalid_headers off;

     sendfile on;


     gzip              on;
     gzip_http_version 1.0;
     gzip_proxied      any;
     gzip_min_length   500;
     gzip_disable      "MSIE [1-6]\.";
     gzip_types        text/plain text/xml text/css
     text/comma-separated-values
     text/javascript
     application/x-javascript
     application/atom+xml;

     # hide server info
     server_tokens off;

     # List of application servers
     upstream app_servers {
         server web:8585;
     }

     upstream kernel_gateway {
         server kernel_gateway:8888;
     }

     proxy_http_version 1.1;
     client_max_body_size            0;
     chunked_transfer_encoding       on;

    server {
        # listen 443 ssl http2; # default_server; # deferred;
        # listen [::]:443 ssl http2 default_server;
        listen 80;
	# server_name roualdes.us;

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        # ssl_certificate /etc/letsencrypt/live/roualdes.us/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/roualdes.us/privkey.pem;
        # ssl_certificate /etc/nginx/ssl/nginx.crt;
        # ssl_certificate_key /etc/nginx/ssl/nginx.key;
        # ssl_certificate /etc/nginx/ssl/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        # ssl_session_timeout 1d;
        # ssl_session_cache shared:SSL:50m;
        # ssl_session_tickets off;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        # ssl_dhparam /etc/nginx/ssl/dhparam.pem;


        # modern configuration. tweak to your needs.
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        # ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        # add_header Strict-Transport-Security max-age=15768000;

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # ssl_trusted_certificate /etc/letsencrypt/live/roualdes.us/chain.pem

        # Proxying the connections
        location / {

            proxy_pass         http://app_servers;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_hide_header  X-Powered-By;
            proxy_set_header   X-Forwarded-Host $server_name;
	    proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-NginX-Proxy true;
            proxy_http_version 1.1;

        }

        location /jupyter/v1/12345678-1234-1234-1234-123456789012/ {
            auth_basic           "Kernel gateway auth";
            auth_basic_user_file /etc/nginx/htpasswd;

            proxy_pass http://kernel_gateway/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme https;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }

    # redirect http requests to https
    # server {
    #     listen 80 default_server;
    #     listen [::]:80 default_server;
    #     # server_name roualdes.us www.roualdes.us;

    #     return 301 https://0.0.0.0$request_uri;
    # }
}
